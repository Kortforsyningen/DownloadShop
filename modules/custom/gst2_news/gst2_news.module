<?php
/**
 * @file
 * Code for the News feature.
 */

include_once 'gst2_news.features.inc';


/**
 * Implementation of hook_node_presave().
 */
function gst2_news_node_presave($node) {
  // If selected not to create newsletter, return.
  if ($node->type != 'article' || $node->field_send_it[LANGUAGE_NONE][0]['value'] == 0) {
    return;
  }

  $list_id = gst2_news_get_news_mailchimp_list();
  if ($list_id == FALSE) {
    watchdog("gst2_newsletter", 'Could not find news mailchimp list id.');
    return;
  }

  $config = gst2_tweets_default_twitter_conf();
  $options = array(
    'title' => $node->title,
    'subject' => $node->title,
    'from_email' => $config['from_email'],
    'from_name' => $config['from_name'],
    'list_id' => $list_id,
  );
  $body['html'] = $node->body[LANGUAGE_NONE][0];

  // Create mailchimp campaign.
  gst2_newsletter_create_new_campaign($options, $body);
}

/**
 * Create mailchimp campaign.
 *
 * @param $options
 *   Array of options needed to create campaign.
 * @param $body
 *   Array, containing body and format.
 */
function gst2_newsletter_create_new_campaign($options, $body) {
  module_load_include('inc', 'mailchimp_campaign', 'includes/mailchimp_campaign.admin');
  $cid = mailchimp_campaign_save_campaign($body, $options);
  watchdog("gst2_newsletter", 'Created campaign @cid', array('@cid' => $cid));

  // Send campaign immediately.
  $campaign = mailchimp_campaign_load_multiple(array($cid), array(), FALSE);
  mailchimp_campaign_send_campaign($campaign[$cid]);
  watchdog("gst2_newsletter", 'Send campaign @cid', array('@cid' => $cid));

  cache_clear_all('mailchimp_campaign_campaigns', 'cache');
}

/**
 * Return mailchimp list id.
 *
 * @return bool
 *   If list exist return array containing data of list.
 */
function gst2_news_get_news_mailchimp_list() {
  $mc_lists = mailchimp_get_lists();
  foreach ($mc_lists as $key => $list) {
    if ($list['name'] == 'News') {
      return $list['id'];
    }
  }

  return FALSE;
}


/**
 * Implementation hook_form_FORM_ID_alter().
 */
function gst2_news_form_mailchimp_signup_subscribe_block_newsletter_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if (!empty($user->mail) && $user->mail !== 'subuser@fake.mail') {
    $form['mergevars']['EMAIL']['#value'] = $user->mail;
    $form['mergevars']['EMAIL']['#disabled'] = TRUE;

    $list1 = $form['mailchimp_lists']['mailchimp_92769']['subscribe']['#return_value'];
    $subs1 = mailchimp_get_memberinfo($list1, $user->mail, TRUE);
    if (!empty($subs1) && $subs1['status'] == 'subscribed') {
      $form['mailchimp_lists']['mailchimp_92769']['subscribe']['#default_value'] = 1;
      $form['mailchimp_lists']['mailchimp_92769']['subscribe']['#attributes']['checked'] = 'checked';
    }

    $list2 = $form['mailchimp_lists']['mailchimp_92773']['subscribe']['#return_value'];
    $subs2 = mailchimp_get_memberinfo($list2, $user->mail, TRUE);
    if (!empty($subs2) && $subs2['status'] == 'subscribed') {
      $form['mailchimp_lists']['mailchimp_92773']['subscribe']['#default_value'] = 1;
      $form['mailchimp_lists']['mailchimp_92773']['subscribe']['#attributes']['checked'] = 'checked';
    }

    $list3 = $form['mailchimp_lists']['mailchimp_92765']['subscribe']['#return_value'];
    $subs3 = mailchimp_get_memberinfo($list3, $user->mail, TRUE);
    if (!empty($subs3) && $subs3['status'] == 'subscribed') {
      $form['mailchimp_lists']['mailchimp_92765']['subscribe']['#default_value'] = 1;
      $form['mailchimp_lists']['mailchimp_92765']['subscribe']['#attributes']['checked'] = 'checked';
    }
  }
  else {
    $form['#prefix'] = '<p>' . t('There is no email configured for you account, please contact your account administrator.') . '</p>';
    unset($form['mailchimp_lists']);
    unset($form['mergevars']);
    unset($form['actions']);
  }

  $form['#submit'][] = 'news_subscription_custom_handler';

  // We don't need default validation,
  // because it doesn't allows unsubscription.
  unset($form['#validate']);
}

/**
 * Custom subscription form handler to change user email or to unsubscribe it.
 */
function news_subscription_custom_handler(&$form, &$form_state) {
  if (empty($form_state['values']['mergevars']['EMAIL'])) {
    form_set_error('EMAIL', t('Please specify email address.'));
    return;
  }

  global $user;

  if (empty($user->mail) || $user->mail != $form_state['values']['mergevars']['EMAIL']) {
    $existingUser = user_load($user->uid);
    $existingUser->mail = $form_state['values']['mergevars']['EMAIL'];
    user_save((object) array('uid' => $existingUser->uid), (array) $existingUser);
  }

  // Unsubscribe user from list.
  foreach ($form_state['values']['mailchimp_lists'] as $key => $subscription) {
    if ($subscription['subscribe'] === 0) {
      mailchimp_unsubscribe($form['mailchimp_lists'][$key]['subscribe']['#return_value'], $form_state['values']['mergevars']['EMAIL'], TRUE);
    }
  }
}
