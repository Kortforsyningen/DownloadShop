<?php

/**
 * Implements hook_rules_action_info().
 */
function kms_commerce_files_rules_action_info() {
  $actions = array();

  $actions['kms_commerce_files_add_files'] = array(
    'label' => t('Add selected files to the order'),
    'parameter' => array(
      'line_item' => array(
        'type' => 'commerce_line_item',
        'label' => t('Commerce line item'),
        'restriction' => 'selector',
      ),
    ),
    'group' => 'KMS',
    'callbacks' => array(
      'execute' => 'kms_commerce_files_add_files',
    ),
  );

  return $actions;

}

/*
 Column   |          Type                                    
-----------+-----------------------
 fid       | integer               
 uid       | bigint                
 filename  | character varying(255)
 uri       | character varying(255)
 filemime  | character varying(255)
 filesize  | bigint                
 status    | smallint              
 timestamp | bigint                
 origname  | character varying(255)
 */


function kms_commerce_files_add_files( $li ) {
  
  if (empty($li->field_selection[LANGUAGE_NONE][0]['value']))
    return;

  $op = commerce_product_load($li->commerce_product[LANGUAGE_NONE][0]['product_id']);
  
  $folder  = $op->field_folder[LANGUAGE_NONE][0]['value'];
  $finfo = finfo_open(FILEINFO_MIME_TYPE);

  $files = json_decode($li->field_selection[LANGUAGE_NONE][0]['value']);

  $downloads = array();

  foreach ($files as $file) {
         
    $uri = 'private://' . $folder . '/' . $file;

    // Try to load exsting file
    $flist = file_load_multiple(array(), array('uri' => $uri));
    // If empty, $file will be false, otherwise will contain the required file 
    $f = reset($flist); 
    
    // If files is new, then insert to file_managed and load again to get fid
    if (!$f) {
      $stat = stat(DRUPAL_ROOT."/sites/private/$folder/$file");
      $values = array( 
        1,
        $file,
        $uri,
        finfo_file($finfo, DRUPAL_ROOT."/sites/private/$folder/$file"),
        $stat['size'],
        FILE_STATUS_PERMANENT,
        $stat['mtime'],
        $file
      );

      $sql = 'INSERT INTO file_managed (uid,filename,uri,filemime,filesize,status,timestamp,origname)'
         . 'VALUES (?,?,?,?,?,?,?,?)';

      $dbh = Database::getConnection();
      $stmt = $dbh->prepare($sql);
      $stmt->execute($values);

      $flist = file_load_multiple(array(), array('uri' => $uri));
      $f = reset($flist);

      file_usage_add($f,'kms_commerce_files','user', 1, 1);
    }

    $downloads[] = array('fid' => $f->fid,
          'data' => array("duration"       => 3600 * 24,
                          "download_limit" => -1,
                          "address_limit"  => -1,
                         )
    );
  }

  $product = commerce_product_new('file_collection');
  $product->sku = uniqid('FILES-', true);
  $product->uid      = 1;
  $product->language = LANGUAGE_NONE;
  $product->title    = $op->title;
  $product->status   = 1;
  $product->created  = $product->changed = time();
  $product->field_order_id[LANGUAGE_NONE][0]['value'] = $li->order_id;

  $product->field_original_product[LANGUAGE_NONE][0]['product_id'] = $op->product_id;

  $product->field_downloads[LANGUAGE_NONE] = $downloads;

  $price = array(LANGUAGE_NONE => array(0 => array(
    'amount' => 0, 
    'currency_code' => commerce_default_currency(),
  )));

  $product->commerce_price = $price;
  commerce_product_save($product);

  $li->commerce_product[LANGUAGE_NONE][0]['product_id'] = $product->product_id;
  commerce_line_item_save($li);

}

/**
 *   Implement hook_views_pre_render
 *
 *   Alter the uid field in the download view to contain the Order ID
 *
 *   Any attemps to insert this directly in views resulted in duplicate rows ..
 *
 */

 function kms_commerce_files_views_pre_render(&$view) {
   
  if ($view->name == 'commerce_user_file_licenses') {
    foreach ($view->result as $item) {
      $license = entity_load('commerce_file_license', array($item->license_id));
      $line_item = entity_load('commerce_line_item',$license[key($license)]->line_item_ids);
      $item->commerce_file_license_uid = $line_item[key($line_item)]->order_id;

    }
  }

 }



