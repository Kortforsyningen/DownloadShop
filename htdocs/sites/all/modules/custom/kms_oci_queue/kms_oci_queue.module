<?php

define('KMS_OCI_QUEUE_PREFIX', 'kms_oci_queue');

/**
 * Implements hook_menu().
 */
function kms_oci_queue_menu() {
  $items = array();
  $items['admin/reports/kms-oci-queue'] = array(
    'title' =>'Oci queue status',
    'description' => 'Show oci queue status',
    'page callback' => 'kms_oci_queue_admin_page',
    'access arguments' => array('administer kms oci queue'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['kms-oci-queue/ajax/load-log/%'] = array(
    'title' => 'Show job log',
    'page callback' => 'kms_oci_queue_admin_page_job_log',
    'access arguments' => array('access content'),
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function kms_oci_queue_add_single_query($query) {
  if(empty($query)) {
    return;
  }
  $queue = DrupalQueue::get('kms_oci_queue_queries');
  $queue->createQueue();  // There is no harm in trying to recreate existing.
  $job = new stdClass();
  $job->query = $query;
  // Queue the string.
  $queue->createItem($job);
//  $count = $queue->numberOfItems();
}

function miktestSet($queue_name, $str) {
  $queue = DrupalQueue::get($queue_name);
  $queue->createQueue();  // There is no harm in trying to recreate existing.
  $job = new stdClass();
  $job->id = uniqid();
  $job->str = $str;
  // Queue the string.
  $queue->createItem($job);
//  $count = $queue->numberOfItems();
}

function miktestGet($queue_name) {
  $queue = DrupalQueue::get($queue_name);
  $item = $queue->claimItem();
  var_dump($item);
}

function kms_oci_queue_get_items($queue_name) {
  $items = array();
  $result = db_query("SELECT item_id, data, expire, created FROM {queue} WHERE name = :name ORDER BY item_id",
    array(':name' => $queue_name),
    array('fetch' => PDO::FETCH_ASSOC));
  foreach ($result as $item) {
    $items[] = $item;
  }
  return $items;
}

function kms_oci_queue_fetch_queue_names() {
  $query = db_select('queue', 'q');
  $query->fields('q', array('name'));
  $query->condition('q.name', "kms_oci_queue%", 'LIKE');
  $query->groupBy('q.name');
  $result = $query->execute()->fetchAllAssoc('name');
  return $result ? array_keys($result) : array();
}

function kms_oci_queue_admin_page () {
  drupal_add_js(drupal_get_path('module', 'kms_oci_queue') .'/js/kms_oci_queue_reports.js');
  drupal_add_css(drupal_get_path('module', 'kms_oci_queue') .'/css/kms_oci_queue_reports.css');

  $output['queues'] = kms_oci_queue_admin_page_jobs();
  return $output;
}

function kms_oci_queue_admin_page_logs() {

}

function kms_oci_queue_admin_page_jobs () {
  $output = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('kms-oci-queue-jobs-overview'),
    ),
  );
  foreach(kms_oci_queue_fetch_queue_names() as $name) {
    $jobs_output = array(
      '#type' => 'container',
      '#attributes' => array(
        'class' => array('kms-oci-queue-jobs'),
      ),
    );
    $jobs_output["job_queue_title_$name"] = array(
      '#type' => 'html_tag',
      '#tag' => 'h2',
      '#value' => 'Query jobs (' . $name . ')',
    );
    foreach(kms_oci_queue_get_items($name) as $item) {
      $job = KmsOciQueueJobFactory::get($item['item_id']);
      $rows[] = array(
        'data' => array(
          array('data' => $job->jid, 'data-jid' => $job->jid, 'class' => 'job-log-trigger'),
          array('data' => $job->info),
          array('data' => $job->status->message, 'class' => 'status-' . $job->status->status),
          array('data' => format_date($job->created)),
        )
      );
      $rows[] = array(
        'class' => array('kms-oci-queue-job-log'),
        'data-jid' => $job->jid,
        'data' => array(
          array('data' => '&nbsp;', 'colspan' => 4),
        ),
      );
    }

    $jobs_output["job_queue_$name"] = array(
      '#theme' => 'table',
      '#header' => array(t('Job id'), t('Info'), t('Status'), t('Created')),
      '#rows' => $rows,
    );


    $output["kms_oci_queue_jobs_$name"] = $jobs_output;
  }

  return $output;
}

function kms_oci_queue_admin_page_job_log($jid){
  $json['html'] = '';
  $job = KmsOciQueueJobFactory::get($jid);
  if(!empty($job)){
    $log = $job->getLog();
  }
  $output = array();
  if(!empty($log)){
    foreach($log as $id => $entry) {
      $rows[] = array(
        array('data' => format_date($entry->timestamp), 'colspan' => 1),
        array('data' => format_string($entry->message, unserialize($entry->variables)), 'colspan' => 2),
      );
    }
    $output["log_$id"] = array(
      '#theme' => 'table',
      '#header' => array(
//        array('data' => t('Log'), 'colspan' => 2),
//        array('data' => t('Message'), 'colspan' => 2),
      ),
      '#rows' => $rows,
    );
    $json['html'] = render($output);
  }

  drupal_json_output($json);
  exit;
}
