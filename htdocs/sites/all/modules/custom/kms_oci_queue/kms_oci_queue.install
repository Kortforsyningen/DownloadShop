<?php

/**
 * Implements hook_install().
 */
function kms_oci_queue_install() {
  // Create necesarry job queues
  foreach(KmsOciQueueJob::$queues as $queue) {
    variable_set('queue_class_' . $queue['name'], $queue['class']);
    $q = DrupalQueue::get($queue['name']);
    $q->createQueue();
  }

  $root_dir = KMS_OCI_QUEUE_ENGINE_ROOT_URI;
  $root_dir_created = file_prepare_directory($root_dir, FILE_CREATE_DIRECTORY);
  if ($root_dir_created) {
    file_create_htaccess($root_dir);
  }
  $subdirs = array(
    KMS_OCI_QUEUE_ENGINE_DIR_JOBS,
    KMS_OCI_QUEUE_ENGINE_DIR_JOBS_PROCESSED,
  );
  foreach ($subdirs as $subdir) {
    file_prepare_directory(sprintf('%s/%s', $root_dir, $subdir), FILE_CREATE_DIRECTORY);
  }

}

function kms_oci_queue_uninstall() {
  // Atodo: find a solution to load KmsOciQueueJob.
//  module_load_include('inc', 'kms_oci_queue', 'includes/kms_oci_queue_job');
//  foreach(KmsOciQueueJob::$queues as $queue) {
//    $q = DrupalQueue::get($queue['name']);
//    $q->deleteQueue();
//    variable_del('queue_class_' . $queue['name']);
//  }
}

/**
 * Implements hook_schema().
 */
function kms_oci_queue_schema() {
  $schema['kms_oci_queue_log'] = array(
    'description' => 'Table that contains logs of all oci queue events.',
    'fields' => array(
      'lid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: log ID.',
      ),
      'jid' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'Job id.',
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user who triggered the event.',
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Text of log message to be passed into the t() function.',
      ),
      'variables' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Serialized array of variables that match the message string and that is passed into the t() function.',
      ),
      'severity' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The severity level of the event; ranges from 0 (Emergency) to 7 (Debug)',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when event occurred.',
      ),
    ),
    'primary key' => array('lid'),
    'indexes' => array(
      'jid' => array('jid'),
      'timestamp' => array('timestamp'),
    ),
    'foreign keys' => array(
      'kms_oci_queue_job' => array(
        'table' => 'kms_oci_queue_job',
        'columns' => array('jid' => 'jid'),
      ),
    ),
  );

  $schema['kms_oci_queue_job'] = array(
    'description' => 'Table that contains current job status.',
    'fields' => array(
      'jid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Primary key: Job id.',
      ),
//      'type' => array(
//        'description' => 'The job type.',
//        'type' => 'varchar',
//        'length' => 32,
//        'not null' => TRUE,
//        'default' => '',
//      ),
//      'cid' => array(
//        'description' => 'The connection id.',
//        'type' => 'varchar',
//        'length' => 32,
//        'not null' => TRUE,
//        'default' => '',
//      ),
      'query_num' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Number of queries to process.',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The current job status',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'When the job was created.',
      ),
    ),
    'primary key' => array('jid'),
    'indexes' => array(
      'timestamp' => array('created'),
    ),
  );

  return $schema;
}
